type Query {
    instrument(address: String!): Instrument
}

type Mutation {
    updateParameter(
        instrumentAddress: String!,
        channelName: String!,
        parameterName: String!,
        value: Value!
    ): Parameter

    createChannel(
        instrumentAddress: String!,
        channelTypeName: String!
    ): Channel
}

type Subscription {
    waveform(instrumentAddress: String!): Waveform
}

type Waveform {
    instrumentAddress: String!
    figure: String
}

type Instrument {
    id: String!
    address: String!
    channels: [Channel]
    channel(name: String!): Channel
    channelTypes: [ChannelType]
}

type Channel {
    id: String!
    name: String!
    parameters: [Parameter]
    parameter(name: String!): Parameter
}

type ChannelType {
    id: String!
    name: String!
}

interface Parameter {
    id: String!
    name: String!
    value: Value
}

type IntegerParameter implements Parameter {
    id: String!
    name: String!
    value: Value
    lowerLimit: Int
    upperLimit: Int
}

type FloatParameter implements Parameter {
    id: String!
    name: String!
    value: Value
    lowerLimit: Float
    upperLimit: Float
}

type SelectParameter implements Parameter {
    id: String!
    name: String!
    value: Value
    options: [String]
}

scalar Value
